# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CountdownTimer.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtTest


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(204, 250)
        MainWindow.setMinimumSize(QtCore.QSize(204, 250))
        MainWindow.setMaximumSize(QtCore.QSize(204, 250))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.stop_pause = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.stp())
        self.stop_pause.setGeometry(QtCore.QRect(100, 110, 101, 31))
        self.stop_pause.setObjectName("stop_pause")
        self.start = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.strt())
        self.start.setGeometry(QtCore.QRect(100, 70, 101, 31))
        self.start.setObjectName("start")
        self.res = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.rst())
        self.res.setGeometry(QtCore.QRect(100, 150, 101, 31))
        self.res.setObjectName("res")
        self.exit = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: sys.exit())
        self.exit.setGeometry(QtCore.QRect(100, 190, 101, 31))
        self.exit.setObjectName("exit")
        self.set_time = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.set_it())
        self.set_time.setGeometry(QtCore.QRect(10, 190, 81, 31))
        self.set_time.setObjectName("set_time")
        self.pom = QtWidgets.QRadioButton(self.centralwidget)
        self.pom.setGeometry(QtCore.QRect(10, 170, 82, 17))
        self.pom.setObjectName("pom")
        self.norm = QtWidgets.QRadioButton(self.centralwidget)
        self.norm.setGeometry(QtCore.QRect(10, 150, 82, 17))
        self.norm.setChecked(True)
        self.norm.setObjectName("norm")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(50, 120, 47, 21))
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(50, 90, 47, 21))
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(50, 60, 47, 21))
        self.label_4.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.mins_in = QtWidgets.QLineEdit(self.centralwidget)
        self.mins_in.setGeometry(QtCore.QRect(10, 90, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.mins_in.setFont(font)
        self.mins_in.setMaxLength(2)
        self.mins_in.setAlignment(QtCore.Qt.AlignCenter)
        self.mins_in.setObjectName("mins_in")
        self.secs_in = QtWidgets.QLineEdit(self.centralwidget)
        self.secs_in.setGeometry(QtCore.QRect(10, 120, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.secs_in.setFont(font)
        self.secs_in.setMaxLength(2)
        self.secs_in.setAlignment(QtCore.Qt.AlignCenter)
        self.secs_in.setObjectName("secs_in")
        self.hr_in = QtWidgets.QLineEdit(self.centralwidget)
        self.hr_in.setGeometry(QtCore.QRect(10, 60, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.hr_in.setFont(font)
        self.hr_in.setMaxLength(2)
        self.hr_in.setAlignment(QtCore.Qt.AlignCenter)
        self.hr_in.setObjectName("hr_in")
        self.time_out = QtWidgets.QLabel(self.centralwidget)
        self.time_out.setGeometry(QtCore.QRect(10, 10, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.time_out.setFont(font)
        self.time_out.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.time_out.setText("")
        self.time_out.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.time_out.setObjectName("time_out")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 204, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.total = 0
        self.diff = 0
        self.buffer = 0
        self.hr_out = ''
        self.min_out = ''
        self.sec_out = ''

    def rst(self):
        self.hr_out = ''
        self.min_out = ''
        self.sec_out = ''
        self.mins_in.setText('0')
        self.secs_in.setText('0')
        self.hr_in.setText('0')
        self.time_out.setText('')
        self.total = 0
        self.buffer = 0

    def strt(self):
        msecs = 1000
        self.total = self.buffer
        while self.total >= 0:
            self.update()
            QtTest.QTest.qWait(msecs)
            self.total -= 1
        QtTest.QTest.qWait(5000)
        self.time_out.setText('Now take a rest!')
        self.rest_mode()

    def rest_mode(self):
        msecs = 1000
        while self.diff >= 0:
            self.hr_out = str(self.diff // 3600)
            self.min_out = str((self.diff - float(self.hr_out) * 3600) // 60)
            self.sec_out = str(self.diff - float(self.hr_out) * 3600 - float(self.min_out) * 60)
            self.time_out.setText(self.hr_out + ' hrs:' + self.min_out + ' mins:' + self.sec_out + 'secs')
            QtTest.QTest.qWait(msecs)
            self.diff -= 1


    def update(self):
        self.hr_out = str(self.total // 3600)
        self.min_out = str((self.total - float(self.hr_out) * 3600) // 60)
        self.sec_out = str(self.total - float(self.hr_out) * 3600 - float(self.min_out) * 60)
        self.time_out.setText(self.hr_out + ' hrs:' + self.min_out + ' mins:' + self.sec_out + 'secs')

    def stp(self):
        self.buffer = self.total
        self.total = 0


    def set_it(self):
        if self.norm.isChecked():
            self.total = (int(self.hr_in.text()) * 3600) + (int(self.mins_in.text()) * 60) + int(self.secs_in.text())
        elif self.pom.isChecked():
            self.total = (int(self.hr_in.text()) * 3600) + (int(self.mins_in.text()) * 60) + int(self.secs_in.text())
            self.diff = 0.15 * self.total
            self.total *= 0.85

        self.hr_out = str(self.total // 3600)
        self.min_out = str((self.total - float(self.hr_out) * 3600) // 60)
        self.sec_out = str(self.total - float(self.hr_out) * 3600 - float(self.min_out) * 60)
        self.buffer = self.total

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.stop_pause.setText(_translate("MainWindow", "Stop/Pause"))
        self.start.setText(_translate("MainWindow", "Start"))
        self.res.setText(_translate("MainWindow", "Reset"))
        self.exit.setText(_translate("MainWindow", "Exit"))
        self.set_time.setText(_translate("MainWindow", "Set Time"))
        self.pom.setText(_translate("MainWindow", "Pomodoro"))
        self.norm.setText(_translate("MainWindow", "Normal Mode"))
        self.label_6.setText(_translate("MainWindow", "Seconds"))
        self.label_5.setText(_translate("MainWindow", "Minutes"))
        self.label_4.setText(_translate("MainWindow", "Hours"))
        self.mins_in.setText(_translate("MainWindow", "0"))
        self.secs_in.setText(_translate("MainWindow", "0"))
        self.hr_in.setText(_translate("MainWindow", "0"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
